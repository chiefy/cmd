version: 2
executorType: docker
containerInfo:
  - image: mattaitchison/base
    cmd: ["/bin/sh"]
  - image: mattaitchison/dynamodb-local
    cmd: ["-inMemory" ,"-sharedDb"]
stages:
  build:
    environment:
      - GOPATH: "/go"
    workDir: /go/src/github.com/progrium/cmd
    steps:
      - type: checkout
      - type: cache-restore
        name: Restore glide cache
        key: cmd-{{ .Branch }}-{{ checksum "glide.lock" }}
      - type: shell
        name: Install deps
        command: |
          git config --global http.https://gopkg.in.followRedirects true
          glide install --strip-vendor
      - type: cache-save
        name: Save glide cache
        key:  cmd-{{ .Branch }}-{{ checksum "glide.lock" }}-{{ epoch }}
        paths:
          - /go/src/github.com/progrium/cmd/vendor
          - ~/.glide/cache
      - type: shell
        name: Build cmd
        command: |
          make build
      - type: shell
        name: "Install JUnit & Setup Test Path"
        command: |
          mkdir -p /tmp/test-results
      - type: shell
        name: Run tests
        command: |
          set -euo pipefail
          export PATH=$GOPATH/bin:$PATH
          go test -v $(glide nv) | go-junit-report > /tmp/test-results/unit-tests.xml
      - type: test-results-store
        path: /tmp/test-results
      - type: shell
        name: Build ui
        command: |
          make ui-build
      - type: setup-docker-engine
      - type: shell
        name: Build Image
        command: |
          set -euo pipefail
          make image
      - type: shell
        name: Push Image
        command: |
          eval $(aws ecr get-login --region us-east-1)
          docker tag progrium/cmd 055471703963.dkr.ecr.us-east-1.amazonaws.com/cmd:$CIRCLE_BUILD_NUM
          docker push 055471703963.dkr.ecr.us-east-1.amazonaws.com/cmd:$CIRCLE_BUILD_NUM
      - type: artifacts-store
        path: build
        destination: build
      - type: deploy
        name: "Deploy beta channel"
        command: |
          set -euo pipefail
          mkdir -p ~/.kube
          echo $KUBE_CONFIG | base64 --decode --ignore-garbage > ~/.kube/config
          make deploy-beta BUILD_NUM=$CIRCLE_BUILD_NUM
      - type: deploy
        name: "Deploy to production"
        command: |
          set -eu
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            export PATH=$GOPATH/bin:$PATH
            go get -u github.com/convox/rack/cmd/convox
            make deploy
          fi
